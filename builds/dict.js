var Dict = function PythonDictWrapper(kwargs){class PythonDictBase{constructor(){this.$data={},this.update(kwargs)}static createClass(){return new PythonDictBase}get(key){return this.$data[key]}set(key,value){Object.defineProperty(PythonDictBase.prototype,key,{get(){return this.$data[key]},set(val){this.$data[key]=val}}),this[key]=value}update(kwargs){Object.keys(kwargs).forEach((key=>{this.set(key,kwargs[key])}))}del(key){delete this[key],delete this.$data[key]}get data(){return this.$data}set data(kwargs){return this.update(kwargs)}keys(){return Object.keys(this.$data)}values(){return Object.values(this.$data)}items(){const keys=Object.keys(this.$data),items=[];return keys.forEach((key=>{items.push([key,this.$data[key]])})),items}get dir(){return["keys","values","items","dict","forDict(key, value)","forList(item)"]}forDict(method=null){return this.items().map((i=>method(i[0],i[1])))}forList(method=null){return this.items().map((i=>method(i)))}} return Object.create(PythonDictBase.createClass()) };